
@incollection{helmold_projektmanagement_2023,
	location = {Wiesbaden},
	title = {Projektmanagement},
	isbn = {978-3-658-40609-7},
	url = {https://doi.org/10.1007/978-3-658-40609-7_11},
	abstract = {Das Projektmanagement umfasst die Gesamtheit von Führungsaufgaben, Organisation und Techniken für die erfolgreiche Abwicklung eines Projekts. Ziel des Projektmanagements ist es, Risiken zu begrenzen und Projektziele qualitativ, innerhalb der geplanten Zeit und des geplanten Budgets, zu erreichen. Die {DIN} 69901 definiert Projektmanagement als Gesamtheit von Führungsaufgaben, -organisation, -techniken und -mittel für die Abwicklung eines Projekts.},
	pages = {205--212},
	booktitle = {Wettbewerbsvorteile entlang der Supply Chain sichern: Best-Practice-Beispiele in Beschaffung, Produktion, Marketing und anderen Funktionen der betriebswirtschaftlichen Wertschöpfungskette},
	publisher = {Springer Fachmedien},
	author = {Helmold, Marc},
	editor = {Helmold, Marc},
	urldate = {2025-03-28},
	date = {2023},
	langid = {german},
	doi = {10.1007/978-3-658-40609-7_11},
	file = {Full Text PDF:C\:\\Users\\rebis\\Zotero\\storage\\W8LGQRBK\\Helmold - 2023 - Projektmanagement.pdf:application/pdf},
}

@incollection{eichstadt_qualitatsmanagement_2024,
	location = {Wiesbaden},
	title = {Qualitätsmanagement},
	isbn = {978-3-658-41838-0},
	url = {https://doi.org/10.1007/978-3-658-41838-0_34},
	abstract = {Qualitätsmanagement bezeichnet einen Aufgabenbereich und organisatorische Maßnahmen, die der Verbesserung der Qualität dienen. Das Management versucht, die Kosten der Qualitätskontrolle in ein sinnvolles Verhältnis zu ihrem Nutzen zu setzen. Bei Software wird höhere Qualität hauptsächlich durch Testen erreicht. Um die Qualitätskontrolle durch Tests durchgehend zu nutzen, hilft die Testautomatisierung. Die Qualität von Quellcode kann erhöht werden, indem sich Programmierer an Coding Standards halten, die in einem Styleguide festgehalten sind. Es gibt Programme, die die Einhaltung von Styleguides kontrollieren. Darüber hinaus kann eine statische Codeanalyse durchgeführt werden, um häufig gemachte Fehler zu finden. Der Build Server überwacht die Versionsverwaltung und lässt im Fall einer Änderung alle Tools laufen. Das ist sehr wichtig, um einen Überblick über den Gesamtzustand der Software zu bekommen und Fehler frühzeitig zu finden. Die Kosten, die eine Fehlerbeseitigung verursacht, steigen umso stärker an, je später sie stattfindet.},
	pages = {289--294},
	booktitle = {52 Stunden Informatik: Was jeder über Informatik wissen sollte},
	publisher = {Springer Fachmedien},
	author = {Eichstädt, Timm and Spieker, Stefan},
	editor = {Eichstädt, Timm and Spieker, Stefan},
	urldate = {2025-03-28},
	date = {2024},
	langid = {german},
	doi = {10.1007/978-3-658-41838-0_34},
	file = {Full Text PDF:C\:\\Users\\rebis\\Zotero\\storage\\6ECLFA8K\\Eichstädt und Spieker - 2024 - Qualitätsmanagement.pdf:application/pdf},
}

@incollection{eichstadt_apis_2024,
	location = {Wiesbaden},
	title = {{APIs} (mit Python)},
	isbn = {978-3-658-41838-0},
	url = {https://doi.org/10.1007/978-3-658-41838-0_25},
	abstract = {Bei der Anwendungsentwicklung ist es oft praktisch, Daten oder Dienste anderer Systeme zu verwenden. Dazu werden Programmierschnittstellen benötigt, die man oft als {API} bezeichnet. Beispiele sind Programmbibliotheken, Laufzeitumgebungen und Web-{API}. {REST}-{API} und {SOAP} sind zwei verschiedene Arten von Web-{APIs}. {SOAP} setzt auf {XML}-basierte Nachrichten. Bei {REST} ist das Dateiformat {JSON} sehr häufig anzutreffen. Web-{API} ist wichtig für Internetunternehmen wie {eBay} oder Zalando, um Partnern Funktionen anzubieten, die über die Funktionen der Webseite hinausgehen. In Python können {REST}-{APIs} mithilfe der Programmbibliothek „requests“ einfach verwendet werden. Zur Abfrage werden normalerweise {GET}-Methoden verwendet und zum Senden von Daten an eine {API} kommen {POST}-Methoden zum Einsatz. Auch das Erstellen eigener {APIs} ist nicht schwer. Die bekannteste Programmbibliothek ist „requests“.},
	pages = {211--218},
	booktitle = {52 Stunden Informatik: Was jeder über Informatik wissen sollte},
	publisher = {Springer Fachmedien},
	author = {Eichstädt, Timm and Spieker, Stefan},
	editor = {Eichstädt, Timm and Spieker, Stefan},
	urldate = {2025-03-28},
	date = {2024},
	langid = {german},
	doi = {10.1007/978-3-658-41838-0_25},
	file = {Full Text PDF:C\:\\Users\\rebis\\Zotero\\storage\\WVPM5RRX\\Eichstädt und Spieker - 2024 - APIs (mit Python).pdf:application/pdf},
}

@incollection{eichstadt_versionsverwaltung_2024,
	location = {Wiesbaden},
	title = {Versionsverwaltung},
	isbn = {978-3-658-41838-0},
	url = {https://doi.org/10.1007/978-3-658-41838-0_30},
	abstract = {Es gibt viele gute Gründe, warum die Verwaltung verschiedener Versionen wichtig und nützlich ist. Das gilt besonders für Quellcode. Versionsverwaltung existiert bereits sehr lange. Eine lokale Versionsverwaltung sorgt für die Versionierung innerhalb einer einzelnen Datei. Die zentrale Versionsverwaltung ist als Client-Server-System aufgebaut. Die Ablage erfolgt innerhalb eines Repository. Eine verteilte Versionsverwaltung speichert das Repository zusätzlich auch bei jedem Client. Die am weitesten verbreitete Versionsverwaltung ist heute Git. Es gibt kommerzielle Plattformen, die um Git herum ein ansprechendes Webinterface und zusätzliche Funktionalitäten anbieten. Zu diesem Buch existiert ein {GitHub} Repository. Ist ein Repository lokal geklont, können Änderungen vorgenommen und committed werden. Git bietet zahlreiche weitere Befehle, die mit der Git Bash ausgeführt werden können. Das Branching ermöglicht es, Änderungen unabhängig vom Hauptzweig vorzunehmen.},
	pages = {255--263},
	booktitle = {52 Stunden Informatik: Was jeder über Informatik wissen sollte},
	publisher = {Springer Fachmedien},
	author = {Eichstädt, Timm and Spieker, Stefan},
	editor = {Eichstädt, Timm and Spieker, Stefan},
	urldate = {2025-03-28},
	date = {2024},
	langid = {german},
	doi = {10.1007/978-3-658-41838-0_30},
	file = {Full Text PDF:C\:\\Users\\rebis\\Zotero\\storage\\YPF5KHYJ\\Eichstädt und Spieker - 2024 - Versionsverwaltung.pdf:application/pdf},
}

@incollection{eichstadt_testen_2024,
	location = {Wiesbaden},
	title = {Testen},
	isbn = {978-3-658-41838-0},
	url = {https://doi.org/10.1007/978-3-658-41838-0_33},
	abstract = {Testen hat die Aufgabe, Bugs zu finden. Es gibt Webseiten, bei denen jeder selbst zum Tester werden kann, um mit gefundenen Fehlern Geld zu verdienen. Wichtig ist, dass die ausgeführten Schritte, das erwartete Ereignis und das tatsächlich beobachtete Verhalten beschrieben werden. Neben dem manuellen Testen gibt es auch noch weitere Testarten: Unit Test, Integrationstest, Systemtest, Akzeptanztest, Regressionstest. Auch in der Umsetzung gibt es verschiedene Möglichkeiten: Black Box Testing, White Box Testing, Grey Box Testing. Eine verbreitete Art, qualitativ hochwertige Software zu schreiben, ist die testgetriebene Entwicklung, bei der der Test vor der Implementierung geschrieben wird. Um Unit Tests in Python zu schreiben, wird die Klasse Unittest verwendet. Der Zustand von Programmen kann innerhalb von Tests mit Assertions überprüft werden.},
	pages = {281--288},
	booktitle = {52 Stunden Informatik: Was jeder über Informatik wissen sollte},
	publisher = {Springer Fachmedien},
	author = {Eichstädt, Timm and Spieker, Stefan},
	editor = {Eichstädt, Timm and Spieker, Stefan},
	urldate = {2025-03-28},
	date = {2024},
	langid = {german},
	doi = {10.1007/978-3-658-41838-0_33},
	file = {Full Text PDF:C\:\\Users\\rebis\\Zotero\\storage\\4CGMP8WS\\Eichstädt und Spieker - 2024 - Testen.pdf:application/pdf},
}

@incollection{dechange_agiles_2024,
	location = {Berlin, Heidelberg},
	title = {Agiles Projektmanagement},
	isbn = {978-3-662-68169-5},
	url = {https://doi.org/10.1007/978-3-662-68169-5_4},
	abstract = {Im vierten Kapitel wird das agile Projektmanagement mit seinen Werten, Prinzipien, Rahmenwerken und Methoden erklärt. Dabei werden insbesondere die Rahmenwerke Scrum, Kanban und Design Thinking erklärt und dargestellt. Des Weiteren erfolgt ein Vergleich mit dem traditionellen Projektmanagement. Im Einzelnen umfasst dieses Kapitel folgende Themen:Begriffsdefinition des agilen Projektmanagements und Abgrenzung gegenüber dem traditionellen {ProjektmanagementScrum} inkl. der Darstellung der Rollen, Artefakte, Ereignisse sowie des {AblaufsKanban} mit seinen Prinzipien und dem zentralen Element des {KanbanboardsDesign} Thinking mit den sechs {SchrittenEine} {ZusammenfassungWiederholungsfragen}},
	pages = {265--311},
	booktitle = {Projektmanagement – Schnell erfasst},
	publisher = {Springer},
	author = {Dechange, André},
	editor = {Dechange, André},
	urldate = {2025-03-28},
	date = {2024},
	langid = {german},
	doi = {10.1007/978-3-662-68169-5_4},
	file = {Full Text PDF:C\:\\Users\\rebis\\Zotero\\storage\\VTIP7RNJ\\Dechange - 2024 - Agiles Projektmanagement.pdf:application/pdf},
}

@online{review_20222_kanban_nodate,
	title = {Kanban: Was ist das? (Evolutionäres Change Management)},
	url = {https://www.it-agile.de/agiles-wissen/kanban/was-ist-kanban/},
	shorttitle = {Kanban},
	abstract = {Kanban ist eine agile Methode für evolutionäres Change Management. Das bedeutet, dass die bestehende Arbeitsweise in kleinen Schritten (evolutionär) verbessert wird. Am Anfang steht das gemeinsame Verstehen der aktuellen Situation, viele kontinuierliche Änderungen helfen, diese zu verbessern.},
	titleaddon = {it-agile {GmbH}},
	author = {review 2022/2, „Lean Forecasting: Warum Schätzungen Blödsinn sind!-Ursachen des Problems und Alternativen “ in agile and review 2022/S, „Kanban Maturity Model-Wie Sie die typischen Symptome bei einer Kanban-Einführung überwinden“ in agile and David J. Anderson: Kanban (Übersetzung aus dem Englischen), dpunkt Verlag and David J. Anderson: Kanban Maturity Model (Übersetzung aus dem Englischen), dpunkt Verlag},
	urldate = {2025-03-28},
	langid = {german},
	file = {Snapshot:C\:\\Users\\rebis\\Zotero\\storage\\Y8JE4A2X\\was-ist-kanban.html:text/html},
}
